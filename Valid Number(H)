/*Validate if a given string is numeric.

Some examples:
"0" => true
" 0.1 " => true
"abc" => false
"1 a" => false
"2e10" => true
*/

public class Solution {
    public boolean isNumber(String s) {
        int i = 0;
        int n = s.length();
        boolean isNumeric = false;
        
        while (i < n && Character.isWhitespace(s.charAt(i))) i++;
        if (i < n && (s.charAt(i) == '+' || s.charAt(i) == '-')) i++;
        
        while (i < n && Character.isDigit(s.charAt(i))) {
             i++;
             isNumeric = true;
        }
        if (i < n && s.charAt(i) == '.') {
            i++;
            while (i < n && Character.isDigit(s.charAt(i))) {
            i++;
            isNumeric = true;
            }
        }
        if (isNumeric && i < n && s.charAt(i) == 'e') {
           i++;
           isNumeric = false;
           if (i < n && (s.charAt(i) == '+' || s.charAt(i) == '-')) i++;
           while (i < n && Character.isDigit(s.charAt(i))) {
                 i++;
                 isNumeric = true;
            }
          }

        
        while (i < n && Character.isWhitespace(s.charAt(i))) i++;
             return isNumeric && i == n;
    }
}
