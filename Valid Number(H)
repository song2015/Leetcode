/*Validate if a given string is numeric.

Some examples:
"0" => true
" 0.1 " => true
"abc" => false
"1 a" => false
"2e10" => true
*/

public class Solution {
    public boolean isNumber(String s) {
        int l=s.length(),i=0;
        boolean result=false;
        
        while(i<l && Character.isWhitespace(s.charAt(i))) i++;  //isWhitespace  
        if(i<l &&( s.charAt(i)=='+' || s.charAt(i)=='-')) i++;  //must check i<l first everytime,or will have index out of bounds exception
        
        while(i<l && Character.isDigit(s.charAt(i)) ) {
            i++;
            result=true;
        }
        
        if(i<l && s.charAt(i)=='.' ) {  //does not matter if there is not number after .
            i++;
            while(i<l && Character.isDigit(s.charAt(i))){
                i++;
                result=true;
            }
        }
         
         if(result && i<l && s.charAt(i)=='e' ) {   //there is number before e
            i++;
            result=false;   //there is number after e 
            if(i<l && (s.charAt(i)=='+' || s.charAt(i)=='-') ) i++;
            while(i<l && Character.isDigit(s.charAt(i))){
                i++;
                result=true;
            }
        }
        
        while(i<l && Character.isWhitespace(s.charAt(i))) i++;
        
        return result && i==l;// in case of "1    4"
        
        
    }
}
