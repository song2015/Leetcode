23.Merge k Sorted Lists(H)

Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        return mergeLists(lists, 0, lists.length-1);
        }
    
    
    public ListNode mergeLists(ListNode[] lists, int a, int b){
        if(a==b) return lists[a];
        
        if(a<b){
            int mid=(b+a)/2;
            ListNode Node1=mergeLists(lists, a, mid);
            ListNode Node2=mergeLists(lists, mid+1,b);
            return mergeTwoLists(Node1,Node2);
        }else{
            return null;
        }
        
    }
    
    public ListNode mergeTwoLists(ListNode p, ListNode q){
        ListNode temp=new ListNode(0);
        ListNode r=temp;

        while(p != null && q != null){
            if(p.val > q.val){
                temp.next = q;
                q = q.next;
            }else {
                temp.next = p;
                p = p.next;
            }
            temp=temp.next;
        }
        
        if (p != null) temp.next = p;
        if (q != null) temp.next = q;
        
        return r.next;
    }
    
}
